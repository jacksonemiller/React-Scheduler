I made note of a few minor typos I found that I think (today is the first day I have written JS or used React so take this 
with a grain of salt) broke my program when I copy-pasted the given code snippets into my code. I also think I found one fairly minor bug during the portion where we added the ability for users to edit scheduling data of courses.

On the page "Filter by time conflicts," the last block of code given for the App component is
missing the line "if (!schedule) return <h1>Loading schedule...</h1>;" which I think was
causing my page to not show anything for me.

Also on that page of the tutorial, the last block of code given for the Course component
I believe is missing the line "<div className="card-text">{ course.meets }</div>" to display
the scheduling info for the class. 

On the page, "Store data," the boolean expression assigned to isDisabled is written as 
"const isDisabled = hasConflict(course, selected);" rather than the previously given 
"const isDisabled = !isSelected && hasConflict(course, selected);" which I think had the
effect of making selected classes appear grey rather than light green.

On the page "Add authentication," I believe the last code snippet for the TermSelector component is missing an opening parenthesis immediately after its return keyword.



I also found one small bug which I think I was able to fix. That being said, there's a good chance this problem is specific to
me because I messed up some other part of the tutorial, and I haven't really convinced myself of the root cause of the bug if 
it exists, although I think I've found a solution to it for now.
  During the portion where we added the ability for users to change the scheduled times for classes, I noticed a bug where 
when the time of a class was changed, if that class was selected at the time of the edit, the program would find that it had a 
time conflict with itself, and would set the class to be disabled. Every soluton I tried just spawned more issues, but my 
hypothesis right now is that 1. there isn't really a mechanism for things to get assuredly removed from the list of selected 
classes, only added, and 2. a selected class that gets edited might not be recognized as selected afterwards. When we change 
the time of a class, we add a new course json with the updated scheduling info to the array, but the old version - identical 
in all ways except for the scheduling info - remains. Then, hasConflict will end up comparing the new version against the old 
version, and it might find that their times overlap and mark them as conflicting. This doesn't happen with *all* selected 
classes because of the second point. hasConflict is only called in the boolean expression assigned to isDisabled, and that 
call won't happen if isSelected is true given the short-circuiting nature of && and the ordering of the two expressions given 
to it. So typically when a course is selected, we don't call hasConflict anyway. But after the edit, either the new or old 
version (I'm guessing the new version) doesn't have its isSelected value assinged true, so then hasConflict gets called and 
compares the new and old versions. 
  The various new issues that arose during my attempts to fix this made me think that phenomenon might have potentially led to 
other minor issues, but anyway, I think I managed to fix this by comparing classes by comparing only their unique ids rather 
than using array.includes or just course1 === course2, and I added a check to hasConflict to not compare two course with the 
same id against each other. I think there also may have been an issue with the new version of a course which was selected at 
the time of its editing not being recognized as selected due to array.includes not recognizing that the course is present in 
the selected array since the old version still in the array and the new version differ in their scheduling ifnormation despite 
being the same in all other ways.
